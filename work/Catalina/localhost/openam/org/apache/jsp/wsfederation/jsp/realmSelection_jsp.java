/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.36
 * Generated at: 2020-06-18 10:41:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.wsfederation.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import com.sun.identity.shared.debug.Debug;
import com.sun.identity.wsfederation.common.WSFederationConstants;
import com.sun.identity.wsfederation.common.WSFederationUtils;
import com.sun.identity.wsfederation.meta.WSFederationMetaManager;
import com.sun.identity.wsfederation.meta.WSFederationMetaUtils;
import com.sun.identity.wsfederation.jaxb.entityconfig.IDPSSOConfigElement;
import com.sun.identity.wsfederation.jaxb.wsfederation.FederationElement;
import org.owasp.esapi.ESAPI;

public final class realmSelection_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.sun.identity.wsfederation.common.WSFederationUtils");
    _jspx_imports_classes.add("org.owasp.esapi.ESAPI");
    _jspx_imports_classes.add("com.sun.identity.shared.debug.Debug");
    _jspx_imports_classes.add("com.sun.identity.wsfederation.meta.WSFederationMetaUtils");
    _jspx_imports_classes.add("com.sun.identity.wsfederation.common.WSFederationConstants");
    _jspx_imports_classes.add("com.sun.identity.wsfederation.jaxb.entityconfig.IDPSSOConfigElement");
    _jspx_imports_classes.add("com.sun.identity.wsfederation.meta.WSFederationMetaManager");
    _jspx_imports_classes.add("com.sun.identity.wsfederation.jaxb.wsfederation.FederationElement");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');
      out.write('\n');

    Debug debug = WSFederationUtils.debug;
    String jspFile = "realmSelection.jsp: ";
    String wreply = (String)request.getParameter("wreply");
    if (!ESAPI.validator().isValidInput("HTTP Parameter Value: " + wreply, wreply,
        "URL", 2000, false)){
            wreply = "";
    }
    String wctx = (String)request.getParameter("wctx");
    if (!ESAPI.validator().isValidInput("HTTP Parameter Value: " + wctx, wctx,
        "HTTPParameterValue", 2000, true)){
            wctx = null;
    }

    if (debug.messageEnabled()) {
        debug.message(jspFile + "wreply: "+wreply);
    }

    String spMetaAlias = WSFederationMetaUtils.getMetaAliasByUri(
        request.getRequestURI());
    if ( spMetaAlias==null || spMetaAlias.length()==0) {
        response.sendError(response.SC_BAD_REQUEST, "Null metaAlias"
                /* TODO SAML2Utils.bundle.getString("nullSPEntityID") */);
        return;
    }

    WSFederationMetaManager metaManager =
        WSFederationUtils.getMetaManager();
    String spEntityId =
        metaManager.getEntityByMetaAlias(spMetaAlias);
    String spRealm = WSFederationMetaUtils.getRealmByMetaAlias(spMetaAlias);
    Map<String,List<String>> spConfig =
        WSFederationMetaUtils.getAttributes(
        metaManager.getSPSSOConfig(spRealm,spEntityId).getValue());
    String accountRealmCookieName =
        spConfig.get(WSFederationConstants.ACCOUNT_REALM_COOKIE_NAME).get(0);

    String selectedRealm = (String)request.getParameter("realm_list");
    if (!ESAPI.validator().isValidInput("HTTP Parameter Value: " + selectedRealm,
        selectedRealm, "HTTPParameterValue", 2000, true)){
            selectedRealm = null;
    }
    if (debug.messageEnabled()) {
        debug.message(jspFile + "Selected realm: " + selectedRealm);
    }
    if ( selectedRealm != null )
    {
        StringBuffer url = new StringBuffer(wreply);
        url.append("?whr=");
        url.append(selectedRealm);
        if (wctx != null) {
            url.append("&wctx=");
            url.append(wctx);
        }
        if (debug.messageEnabled()) {
            debug.message(jspFile + "Redirecting to: "+url);
        }
        response.sendRedirect(url.toString());
        return;
    }

    String contextPath = request.getContextPath();

      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<title>OpenAM (Realm Selection)</title>\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print( contextPath );
      out.write("/css/styles.css\" type=\"text/css\" />\n");
      out.write("<script language=\"JavaScript\" src=\"");
      out.print( contextPath );
      out.write("/js/browserVersion.js\"></script>\n");
      out.write("<script language=\"JavaScript\" src=\"");
      out.print( contextPath );
      out.write("/js/auth.js\"></script>\n");
      out.write("<script language=\"JavaScript\">\n");
      out.write("\n");
      out.write("    writeCSS('");
      out.print( contextPath );
      out.write("');\n");
      out.write("\n");
      out.write("    function formSubmit() {\n");
      out.write("        var frm = document.forms['realm_form'];\n");
      out.write("\n");
      out.write("        if (frm != null) {\n");
      out.write("            frm.submit();\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("\n");
      out.write("</script>\n");
      out.write("<script type=\"text/javascript\"><!--// Empty script so IE5.0 Windows will draw table and button borders\n");
      out.write("//-->\n");
      out.write("</script>\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<body class=\"LogBdy\" onload=\"placeCursorOnFirstElm();\">\n");
      out.write("\n");
      out.write("  <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" align=\"center\" title=\"\">\n");
      out.write("    <tr>\n");
      out.write("      <td width=\"50%\"><img src=\"");
      out.print( contextPath );
      out.write("/images/dot.gif\" width=\"1\" height=\"1\" alt=\"\" /></td>\n");
      out.write("      <td><img src=\"");
      out.print( contextPath );
      out.write("/images/dot.gif\" width=\"728\" height=\"1\" alt=\"\" /></td>\n");
      out.write("      <td width=\"50%\"><img src=\"");
      out.print( contextPath );
      out.write("/images/dot.gif\" width=\"1\" height=\"1\" alt=\"\" /></td>\n");
      out.write("    </tr>\n");
      out.write("    <tr class=\"LogTopBnd\" style=\"background-image: url(");
      out.print( contextPath );
      out.write("/images/gradlogtop.jpg);\n");
      out.write("    background-repeat: repeat-x; background-position: left top;\">\n");
      out.write("      <td><img src=\"");
      out.print( contextPath );
      out.write("/images/dot.gif\" width=\"1\" height=\"30\" alt=\"\" /></td>\n");
      out.write("      <td>&nbsp;</td>\n");
      out.write("    </tr>\n");
      out.write("    <tr>\n");
      out.write("      <td class=\"LogMidBnd\" style=\"background-image: url(");
      out.print( contextPath );
      out.write("/images/gradlogsides.jpg);\n");
      out.write("        background-repeat:repeat-x;background-position:left top;\">&nbsp;</td>\n");
      out.write("      <td class=\"LogCntTd\" style=\"background-image: url(");
      out.print( contextPath );
      out.write("/images/login-backimage-long.jpg);\n");
      out.write("        background-repeat:no-repeat;background-position:left top;\" height=\"435\" align=\"center\" valign=\"middle\">\n");
      out.write("        <table border=\"0\" background=\"");
      out.print( contextPath );
      out.write("/images/dot.gif\" cellpadding=\"0\" cellspacing=\"0\"\n");
      out.write("        width=\"100%\" title=\"\">\n");
      out.write("          <tr>\n");
      out.write("            <td width=\"260\"><img src=\"");
      out.print( contextPath );
      out.write("/images/dot.gif\" width=\"260\" height=\"245\" alt=\"\" /></td>\n");
      out.write("            <td width=\"415\" bgcolor=\"#ffffff\" valign=\"top\">\n");
      out.write("        <form name=\"realm_form\" action=\"");
      out.print(request.getRequestURI());
      out.write("\"\n");
      out.write("            onSubmit=\"formSubmit(); return false;\" method=\"post\">\n");
      out.write("              <table border=\"0\" cellspacing=\"0\" cellpadding=\"0\">\n");
      out.write("                <tr>\n");
      out.write("                  <td colspan=\"2\">\n");
      out.write("\t\t      <img src=\"");
      out.print( contextPath );
      out.write("/images/dot.gif\" width=\"1\" height=\"25\" alt=\"\" />\n");
      out.write("\t\t  </td>\n");
      out.write("                </tr>\n");
      out.write("\n");
      out.write("        <!-- Header display -->\n");
      out.write("\n");
      out.write("\t<tr>\n");
      out.write("        <td nowrap=\"nowrap\"></td>\n");
      out.write("        <td><div class=\"logTxtSvrNam\">\n");
      out.write("\n");
      out.write("\t    Account Realm Selection\n");
      out.write("\n");
      out.write("\t</div></td>\n");
      out.write("\t</tr>\n");
      out.write("\t<!-- End of Header display -->\n");
      out.write("\n");
      out.write("        <!-- text box display -->\n");
      out.write("\t<tr>\n");
      out.write("\n");
      out.write("\t<td nowrap=\"nowrap\"><div class=\"logLbl\">\n");
      out.write("\n");
      out.write("            <span class=\"LblLev2Txt\">\n");
      out.write("            <label for=\"IDToken1\">\n");
      out.write("                 &nbsp;\n");
      out.write("            </label></span></div>\n");
      out.write("\n");
      out.write("\t</td>\n");
      out.write("\n");
      out.write("\t<td><div class=\"logInp\">\n");
      out.write("\n");
      out.write("        <input type=\"hidden\" name=\"wreply\" value=\"");
      out.print(wreply);
      out.write("\" />\n");

        if ( wctx != null && wctx.length() > 0 ) {

      out.write("\n");
      out.write("        <input type=\"hidden\" name=\"wctx\" value=\"");
      out.print(wctx);
      out.write("\" />\n");

        }

      out.write("\n");
      out.write("        <select name=\"realm_list\">\n");

            String accountRealmCookieValue = null;
            Cookie cookies[] = request.getCookies();
            if (cookies != null) {
              for (int i = 0; i < cookies.length; i++) {
                if (cookies[i].getName().equals( accountRealmCookieName ))
                {
                  accountRealmCookieValue = cookies[i].getValue();
                  break;
                }
              }
            }
            if (debug.messageEnabled()) {
                debug.message(jspFile + "Account Realm Cookie: " +
                    accountRealmCookieValue);
            }

            for (String idpEntityId :
                metaManager.getAllRemoteIdentityProviderEntities(spRealm))
            {
                FederationElement idp =
                    metaManager.getEntityDescriptor(spRealm,
                    idpEntityId);
                IDPSSOConfigElement idpconfig =
                    metaManager.getIDPSSOConfig(spRealm,
                    idpEntityId);

                if ( metaManager.isTrustedProvider(spRealm,
                    spEntityId, idpEntityId) ) {
                    String issuerName = metaManager.
                        getTokenIssuerName(idp);

                    String displayName =
                        WSFederationMetaUtils.getAttribute(idpconfig.getValue(),
                        WSFederationConstants.DISPLAY_NAME);

                    if (debug.messageEnabled()) {
                        debug.message(jspFile + "account realm key: " +
                            issuerName + " display name: " + displayName);
                    }

                    if (displayName == null || displayName.length() == 0){
                        displayName = issuerName;
                    }

      out.write("\n");
      out.write("                    <option value=\"");
      out.print(issuerName);
      out.write("\"\n");
      out.write("                        ");
      out.print(((accountRealmCookieValue != null) &&
                        (accountRealmCookieValue.equals(issuerName))?"selected":""));
      out.write(">\n");
      out.write("                        ");
      out.print(displayName);
      out.write("\n");
      out.write("                    </option>\n");

                }
            }

      out.write("\n");
      out.write("        </select>\n");
      out.write("\n");
      out.write("                </div>\n");
      out.write("\t</td>\n");
      out.write("\t</tr>\n");
      out.write("\t<!-- end of textBox -->\n");
      out.write("\t<!-- Submit button -->\n");
      out.write("\t<tr>\n");
      out.write("\t<td><img src=\"");
      out.print( contextPath );
      out.write("/images/dot.gif\"\n");
      out.write("        width=\"1\" height=\"15\" alt=\"\" /></td>\n");
      out.write("\t    <script language=\"javascript\">\n");
      out.write("\t\tmarkupButton(\n");
      out.write("\t\t    'Proceed',\n");
      out.write("\t\t   \t\"javascript:formSubmit()\");\n");
      out.write("\t    </script>\n");
      out.write("\t</tr>\n");
      out.write("\t<!-- end of Submit button -->\n");
      out.write("\n");
      out.write("        <tr>\n");
      out.write("            <td>&nbsp;</td>\n");
      out.write("        </tr>\n");
      out.write("\t<tr>\n");
      out.write("            <td><img src=\"");
      out.print( contextPath );
      out.write("/images/dot.gif\"\n");
      out.write("            width=\"1\" height=\"33\" alt=\"\" /></td>\n");
      out.write("\t    <td>&nbsp;</td>\n");
      out.write("\t</tr>\n");
      out.write("        </table>\n");
      out.write("        </form>\n");
      out.write("      </td>\n");
      out.write("      <td width=\"45\"><img src=\"");
      out.print( contextPath );
      out.write("/images/dot.gif\"\n");
      out.write("      width=\"45\" height=\"245\" alt=\"\" /></td>\n");
      out.write("    </tr>\n");
      out.write("    </table>\n");
      out.write("    </td>\n");
      out.write("    <td class=\"LogMidBnd\" style=\"background-image: url(");
      out.print( contextPath );
      out.write("/images/gradlogsides.jpg);\n");
      out.write("    background-repeat:repeat-x;background-position:left top;\">&nbsp;</td>\n");
      out.write("    </tr>\n");
      out.write("    <tr class=\"LogBotBnd\" style=\"background-image: url(");
      out.print( contextPath );
      out.write("/images/gradlogbot.jpg);\n");
      out.write("    background-repeat:repeat-x;background-position:left top;\">\n");
      out.write("      <td>&nbsp;</td>\n");
      out.write("      <td>\n");
      out.write("        <div class=\"logCpy\"><span class=\"logTxtCpy\">\n");
      out.write("          Copyright &copy; 2008-2020, ForgeRock AS. All Rights Reserved. Use of this software is subject to the terms and conditions of the ForgeRock&#8482; License and Subscription Agreement.\n");
      out.write("        </div>\n");
      out.write("      </td>\n");
      out.write("      <td>&nbsp;</td>\n");
      out.write("    </tr>\n");
      out.write("  </table>\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
